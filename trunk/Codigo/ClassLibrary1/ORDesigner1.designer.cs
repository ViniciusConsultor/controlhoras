#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3603
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
	using ALinq;
	using ALinq.Mapping;
	using System.ComponentModel;
	using System;
	using System.Reflection;
	
	
	[ALinq.Mapping.DatabaseAttribute(Name="trustdb")]
	[ALinq.Mapping.ProviderAttribute(typeof(ALinq.MySQL.MySqlProvider))]
	public partial class ORDesigner1DataContext : ALinq.DataContext
	{
		
		private static ALinq.Mapping.MappingSource mappingSource = new ALinq.Mapping.AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertServicio(Servicio instance);
    partial void UpdateServicio(Servicio instance);
    partial void DeleteServicio(Servicio instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    #endregion
		
		public ORDesigner1DataContext() : 
				base("server=localhost;User Id=jgarat;Persist Security Info=True;database=trustdb", mappingSource)
		{
			OnCreated();
		}
		
		public ORDesigner1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORDesigner1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORDesigner1DataContext(string connection, ALinq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORDesigner1DataContext(System.Data.IDbConnection connection, ALinq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ALinq.Table<Servicio> Servicios
		{
			get
			{
				return this.GetTable<Servicio>();
			}
		}
		
		public ALinq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
	}
	
	[Table(Name="`trustdb`.`servicios`")]
	public partial class Servicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumeroServicio;
		
		private int _NumeroCliente;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telefonos;
		
		private string _PersonaContacto;
		
		private string _Email;
		
		private string _Celular;
		
		private string _TareasAsignadas;
		
		private string _CelularTrust;
		
		private System.Nullable<sbyte> _Activo;
		
		private EntityRef<Cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroServicioChanging(int value);
    partial void OnNumeroServicioChanged();
    partial void OnNumeroClienteChanging(int value);
    partial void OnNumeroClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonosChanging(string value);
    partial void OnTelefonosChanged();
    partial void OnPersonaContactoChanging(string value);
    partial void OnPersonaContactoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnTareasAsignadasChanging(string value);
    partial void OnTareasAsignadasChanged();
    partial void OnCelularTrustChanging(string value);
    partial void OnCelularTrustChanged();
    partial void OnActivoChanging(System.Nullable<sbyte> value);
    partial void OnActivoChanged();
    #endregion
		
		public Servicio()
		{
			this._cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[Column(Storage="_NumeroServicio", DbType="int(11)", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int NumeroServicio
		{
			get
			{
				return this._NumeroServicio;
			}
			set
			{
				if ((this._NumeroServicio != value))
				{
					this.OnNumeroServicioChanging(value);
					this.SendPropertyChanging();
					this._NumeroServicio = value;
					this.SendPropertyChanged("NumeroServicio");
					this.OnNumeroServicioChanged();
				}
			}
		}
		
		[Column(Storage="_NumeroCliente", DbType="int(11)", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int NumeroCliente
		{
			get
			{
				return this._NumeroCliente;
			}
			set
			{
				if ((this._NumeroCliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroClienteChanging(value);
					this.SendPropertyChanging();
					this._NumeroCliente = value;
					this.SendPropertyChanged("NumeroCliente");
					this.OnNumeroClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="varchar(100)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Direccion", DbType="varchar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_Telefonos", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Telefonos
		{
			get
			{
				return this._Telefonos;
			}
			set
			{
				if ((this._Telefonos != value))
				{
					this.OnTelefonosChanging(value);
					this.SendPropertyChanging();
					this._Telefonos = value;
					this.SendPropertyChanged("Telefonos");
					this.OnTelefonosChanged();
				}
			}
		}
		
		[Column(Storage="_PersonaContacto", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PersonaContacto
		{
			get
			{
				return this._PersonaContacto;
			}
			set
			{
				if ((this._PersonaContacto != value))
				{
					this.OnPersonaContactoChanging(value);
					this.SendPropertyChanging();
					this._PersonaContacto = value;
					this.SendPropertyChanged("PersonaContacto");
					this.OnPersonaContactoChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Celular", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[Column(Storage="_TareasAsignadas", DbType="varchar(255)", UpdateCheck=UpdateCheck.Never)]
		public string TareasAsignadas
		{
			get
			{
				return this._TareasAsignadas;
			}
			set
			{
				if ((this._TareasAsignadas != value))
				{
					this.OnTareasAsignadasChanging(value);
					this.SendPropertyChanging();
					this._TareasAsignadas = value;
					this.SendPropertyChanged("TareasAsignadas");
					this.OnTareasAsignadasChanged();
				}
			}
		}
		
		[Column(Storage="_CelularTrust", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CelularTrust
		{
			get
			{
				return this._CelularTrust;
			}
			set
			{
				if ((this._CelularTrust != value))
				{
					this.OnCelularTrustChanging(value);
					this.SendPropertyChanging();
					this._CelularTrust = value;
					this.SendPropertyChanged("CelularTrust");
					this.OnCelularTrustChanged();
				}
			}
		}
		
		[Column(Storage="_Activo", DbType="tinyint(1) unsigned", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<sbyte> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[Association(Name="cliente_servicio", Storage="_cliente", ThisKey="NumeroCliente", OtherKey="NumeroCliente", IsForeignKey=true)]
		public Cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.servicios.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.servicios.Add(this);
						this._NumeroCliente = value.NumeroCliente;
					}
					else
					{
						this._NumeroCliente = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="`trustdb`.`clientes`")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumeroCliente;
		
		private string _Nombre;
		
		private string _NombreFantasia;
		
		private string _RUT;
		
		private string _Email;
		
		private string _Direccion;
		
		private string _DireccionDeCobro;
		
		private string _Telefonos;
		
		private string _Fax;
		
		private System.Nullable<sbyte> _Activo;
		
		private EntitySet<Servicio> _servicios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroClienteChanging(int value);
    partial void OnNumeroClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnNombreFantasiaChanging(string value);
    partial void OnNombreFantasiaChanged();
    partial void OnRUTChanging(string value);
    partial void OnRUTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnDireccionDeCobroChanging(string value);
    partial void OnDireccionDeCobroChanged();
    partial void OnTelefonosChanging(string value);
    partial void OnTelefonosChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnActivoChanging(System.Nullable<sbyte> value);
    partial void OnActivoChanged();
    #endregion
		
		public Cliente()
		{
			this._servicios = new EntitySet<Servicio>(new Action<Servicio>(this.attach_servicios), new Action<Servicio>(this.detach_servicios));
			OnCreated();
		}
		
		[Column(Storage="_NumeroCliente", DbType="int(11)", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int NumeroCliente
		{
			get
			{
				return this._NumeroCliente;
			}
			set
			{
				if ((this._NumeroCliente != value))
				{
					this.OnNumeroClienteChanging(value);
					this.SendPropertyChanging();
					this._NumeroCliente = value;
					this.SendPropertyChanged("NumeroCliente");
					this.OnNumeroClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="varchar(100)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_NombreFantasia", DbType="varchar(100)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NombreFantasia
		{
			get
			{
				return this._NombreFantasia;
			}
			set
			{
				if ((this._NombreFantasia != value))
				{
					this.OnNombreFantasiaChanging(value);
					this.SendPropertyChanging();
					this._NombreFantasia = value;
					this.SendPropertyChanged("NombreFantasia");
					this.OnNombreFantasiaChanged();
				}
			}
		}
		
		[Column(Storage="_RUT", DbType="varchar(12)", UpdateCheck=UpdateCheck.Never)]
		public string RUT
		{
			get
			{
				return this._RUT;
			}
			set
			{
				if ((this._RUT != value))
				{
					this.OnRUTChanging(value);
					this.SendPropertyChanging();
					this._RUT = value;
					this.SendPropertyChanged("RUT");
					this.OnRUTChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Direccion", DbType="varchar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_DireccionDeCobro", DbType="varchar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DireccionDeCobro
		{
			get
			{
				return this._DireccionDeCobro;
			}
			set
			{
				if ((this._DireccionDeCobro != value))
				{
					this.OnDireccionDeCobroChanging(value);
					this.SendPropertyChanging();
					this._DireccionDeCobro = value;
					this.SendPropertyChanged("DireccionDeCobro");
					this.OnDireccionDeCobroChanged();
				}
			}
		}
		
		[Column(Storage="_Telefonos", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Telefonos
		{
			get
			{
				return this._Telefonos;
			}
			set
			{
				if ((this._Telefonos != value))
				{
					this.OnTelefonosChanging(value);
					this.SendPropertyChanging();
					this._Telefonos = value;
					this.SendPropertyChanged("Telefonos");
					this.OnTelefonosChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="varchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Activo", DbType="tinyint(1) unsigned", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<sbyte> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[Association(Name="cliente_servicio", Storage="_servicios", ThisKey="NumeroCliente", OtherKey="NumeroCliente")]
		public EntitySet<Servicio> servicios
		{
			get
			{
				return this._servicios;
			}
			set
			{
				this._servicios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_servicios(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_servicios(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
	}
}
#pragma warning restore 1591
